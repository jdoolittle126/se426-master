//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace w2_group_activity_1.AddressWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AddressLookupSoap", Namespace="http://ws.cdyne.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class AddressLookup : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StandardizedAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdvancedStandardizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnCityStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BarcodeFontURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CCServerCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAddressW2linesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdvancedCheckAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateDistanceInMilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlternateCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CityStateToZipCodeMatcherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCongressionalDistrictByZipOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AddressLookup() {
            this.Url = global::w2_group_activity_1.Properties.Settings.Default.w2_group_activity_1_AddressWebService_AddressLookup;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StandardizedAddressCompletedEventHandler StandardizedAddressCompleted;
        
        /// <remarks/>
        public event AdvancedStandardizationCompletedEventHandler AdvancedStandardizationCompleted;
        
        /// <remarks/>
        public event ReturnCityStateCompletedEventHandler ReturnCityStateCompleted;
        
        /// <remarks/>
        public event BarcodeFontURLCompletedEventHandler BarcodeFontURLCompleted;
        
        /// <remarks/>
        public event CCServerCheckCompletedEventHandler CCServerCheckCompleted;
        
        /// <remarks/>
        public event CheckAddressCompletedEventHandler CheckAddressCompleted;
        
        /// <remarks/>
        public event CheckAddressW2linesCompletedEventHandler CheckAddressW2linesCompleted;
        
        /// <remarks/>
        public event AdvancedCheckAddressCompletedEventHandler AdvancedCheckAddressCompleted;
        
        /// <remarks/>
        public event VersionInformationCompletedEventHandler VersionInformationCompleted;
        
        /// <remarks/>
        public event CalculateDistanceInMilesCompletedEventHandler CalculateDistanceInMilesCompleted;
        
        /// <remarks/>
        public event AlternateCitiesCompletedEventHandler AlternateCitiesCompleted;
        
        /// <remarks/>
        public event CityStateToZipCodeMatcherCompletedEventHandler CityStateToZipCodeMatcherCompleted;
        
        /// <remarks/>
        public event GetCongressionalDistrictByZipCompletedEventHandler GetCongressionalDistrictByZipCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/StandardizedAddress", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address StandardizedAddress(Address addressToCheck, string LicenseKey) {
            object[] results = this.Invoke("StandardizedAddress", new object[] {
                        addressToCheck,
                        LicenseKey});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void StandardizedAddressAsync(Address addressToCheck, string LicenseKey) {
            this.StandardizedAddressAsync(addressToCheck, LicenseKey, null);
        }
        
        /// <remarks/>
        public void StandardizedAddressAsync(Address addressToCheck, string LicenseKey, object userState) {
            if ((this.StandardizedAddressOperationCompleted == null)) {
                this.StandardizedAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStandardizedAddressOperationCompleted);
            }
            this.InvokeAsync("StandardizedAddress", new object[] {
                        addressToCheck,
                        LicenseKey}, this.StandardizedAddressOperationCompleted, userState);
        }
        
        private void OnStandardizedAddressOperationCompleted(object arg) {
            if ((this.StandardizedAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StandardizedAddressCompleted(this, new StandardizedAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/AdvancedStandardization", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] AdvancedStandardization(Address addressToCheck, string LicenseKey) {
            object[] results = this.Invoke("AdvancedStandardization", new object[] {
                        addressToCheck,
                        LicenseKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void AdvancedStandardizationAsync(Address addressToCheck, string LicenseKey) {
            this.AdvancedStandardizationAsync(addressToCheck, LicenseKey, null);
        }
        
        /// <remarks/>
        public void AdvancedStandardizationAsync(Address addressToCheck, string LicenseKey, object userState) {
            if ((this.AdvancedStandardizationOperationCompleted == null)) {
                this.AdvancedStandardizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdvancedStandardizationOperationCompleted);
            }
            this.InvokeAsync("AdvancedStandardization", new object[] {
                        addressToCheck,
                        LicenseKey}, this.AdvancedStandardizationOperationCompleted, userState);
        }
        
        private void OnAdvancedStandardizationOperationCompleted(object arg) {
            if ((this.AdvancedStandardizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdvancedStandardizationCompleted(this, new AdvancedStandardizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/ReturnCityState", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address ReturnCityState(string zipcode, string LicenseKey) {
            object[] results = this.Invoke("ReturnCityState", new object[] {
                        zipcode,
                        LicenseKey});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnCityStateAsync(string zipcode, string LicenseKey) {
            this.ReturnCityStateAsync(zipcode, LicenseKey, null);
        }
        
        /// <remarks/>
        public void ReturnCityStateAsync(string zipcode, string LicenseKey, object userState) {
            if ((this.ReturnCityStateOperationCompleted == null)) {
                this.ReturnCityStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnCityStateOperationCompleted);
            }
            this.InvokeAsync("ReturnCityState", new object[] {
                        zipcode,
                        LicenseKey}, this.ReturnCityStateOperationCompleted, userState);
        }
        
        private void OnReturnCityStateOperationCompleted(object arg) {
            if ((this.ReturnCityStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnCityStateCompleted(this, new ReturnCityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/BarcodeFontURL", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BarcodeFontURL() {
            object[] results = this.Invoke("BarcodeFontURL", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BarcodeFontURLAsync() {
            this.BarcodeFontURLAsync(null);
        }
        
        /// <remarks/>
        public void BarcodeFontURLAsync(object userState) {
            if ((this.BarcodeFontURLOperationCompleted == null)) {
                this.BarcodeFontURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBarcodeFontURLOperationCompleted);
            }
            this.InvokeAsync("BarcodeFontURL", new object[0], this.BarcodeFontURLOperationCompleted, userState);
        }
        
        private void OnBarcodeFontURLOperationCompleted(object arg) {
            if ((this.BarcodeFontURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BarcodeFontURLCompleted(this, new BarcodeFontURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/CCServerCheck", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CCServerCheck() {
            object[] results = this.Invoke("CCServerCheck", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CCServerCheckAsync() {
            this.CCServerCheckAsync(null);
        }
        
        /// <remarks/>
        public void CCServerCheckAsync(object userState) {
            if ((this.CCServerCheckOperationCompleted == null)) {
                this.CCServerCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCCServerCheckOperationCompleted);
            }
            this.InvokeAsync("CCServerCheck", new object[0], this.CCServerCheckOperationCompleted, userState);
        }
        
        private void OnCCServerCheckOperationCompleted(object arg) {
            if ((this.CCServerCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CCServerCheckCompleted(this, new CCServerCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/CheckAddress", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address CheckAddress(string AddressLine, string ZipCode, string City, string StateAbbrev, string LicenseKey) {
            object[] results = this.Invoke("CheckAddress", new object[] {
                        AddressLine,
                        ZipCode,
                        City,
                        StateAbbrev,
                        LicenseKey});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAddressAsync(string AddressLine, string ZipCode, string City, string StateAbbrev, string LicenseKey) {
            this.CheckAddressAsync(AddressLine, ZipCode, City, StateAbbrev, LicenseKey, null);
        }
        
        /// <remarks/>
        public void CheckAddressAsync(string AddressLine, string ZipCode, string City, string StateAbbrev, string LicenseKey, object userState) {
            if ((this.CheckAddressOperationCompleted == null)) {
                this.CheckAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAddressOperationCompleted);
            }
            this.InvokeAsync("CheckAddress", new object[] {
                        AddressLine,
                        ZipCode,
                        City,
                        StateAbbrev,
                        LicenseKey}, this.CheckAddressOperationCompleted, userState);
        }
        
        private void OnCheckAddressOperationCompleted(object arg) {
            if ((this.CheckAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAddressCompleted(this, new CheckAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/CheckAddressW2lines", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address CheckAddressW2lines(string AddressLine, string AddressLine2, string ZipCode, string City, string StateAbbrev, string LicenseKey) {
            object[] results = this.Invoke("CheckAddressW2lines", new object[] {
                        AddressLine,
                        AddressLine2,
                        ZipCode,
                        City,
                        StateAbbrev,
                        LicenseKey});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAddressW2linesAsync(string AddressLine, string AddressLine2, string ZipCode, string City, string StateAbbrev, string LicenseKey) {
            this.CheckAddressW2linesAsync(AddressLine, AddressLine2, ZipCode, City, StateAbbrev, LicenseKey, null);
        }
        
        /// <remarks/>
        public void CheckAddressW2linesAsync(string AddressLine, string AddressLine2, string ZipCode, string City, string StateAbbrev, string LicenseKey, object userState) {
            if ((this.CheckAddressW2linesOperationCompleted == null)) {
                this.CheckAddressW2linesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAddressW2linesOperationCompleted);
            }
            this.InvokeAsync("CheckAddressW2lines", new object[] {
                        AddressLine,
                        AddressLine2,
                        ZipCode,
                        City,
                        StateAbbrev,
                        LicenseKey}, this.CheckAddressW2linesOperationCompleted, userState);
        }
        
        private void OnCheckAddressW2linesOperationCompleted(object arg) {
            if ((this.CheckAddressW2linesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAddressW2linesCompleted(this, new CheckAddressW2linesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/AdvancedCheckAddress", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] AdvancedCheckAddress(string AddressLine, string AddressLine2, string ZipCode, string City, string StateAbbrev, string LicenseKey) {
            object[] results = this.Invoke("AdvancedCheckAddress", new object[] {
                        AddressLine,
                        AddressLine2,
                        ZipCode,
                        City,
                        StateAbbrev,
                        LicenseKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void AdvancedCheckAddressAsync(string AddressLine, string AddressLine2, string ZipCode, string City, string StateAbbrev, string LicenseKey) {
            this.AdvancedCheckAddressAsync(AddressLine, AddressLine2, ZipCode, City, StateAbbrev, LicenseKey, null);
        }
        
        /// <remarks/>
        public void AdvancedCheckAddressAsync(string AddressLine, string AddressLine2, string ZipCode, string City, string StateAbbrev, string LicenseKey, object userState) {
            if ((this.AdvancedCheckAddressOperationCompleted == null)) {
                this.AdvancedCheckAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdvancedCheckAddressOperationCompleted);
            }
            this.InvokeAsync("AdvancedCheckAddress", new object[] {
                        AddressLine,
                        AddressLine2,
                        ZipCode,
                        City,
                        StateAbbrev,
                        LicenseKey}, this.AdvancedCheckAddressOperationCompleted, userState);
        }
        
        private void OnAdvancedCheckAddressOperationCompleted(object arg) {
            if ((this.AdvancedCheckAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdvancedCheckAddressCompleted(this, new AdvancedCheckAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/VersionInformation", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] VersionInformation() {
            object[] results = this.Invoke("VersionInformation", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void VersionInformationAsync() {
            this.VersionInformationAsync(null);
        }
        
        /// <remarks/>
        public void VersionInformationAsync(object userState) {
            if ((this.VersionInformationOperationCompleted == null)) {
                this.VersionInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionInformationOperationCompleted);
            }
            this.InvokeAsync("VersionInformation", new object[0], this.VersionInformationOperationCompleted, userState);
        }
        
        private void OnVersionInformationOperationCompleted(object arg) {
            if ((this.VersionInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionInformationCompleted(this, new VersionInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/CalculateDistanceInMiles", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CalculateDistanceInMiles(double latitude1, double longitude1, double latitude2, double longitude2) {
            object[] results = this.Invoke("CalculateDistanceInMiles", new object[] {
                        latitude1,
                        longitude1,
                        latitude2,
                        longitude2});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateDistanceInMilesAsync(double latitude1, double longitude1, double latitude2, double longitude2) {
            this.CalculateDistanceInMilesAsync(latitude1, longitude1, latitude2, longitude2, null);
        }
        
        /// <remarks/>
        public void CalculateDistanceInMilesAsync(double latitude1, double longitude1, double latitude2, double longitude2, object userState) {
            if ((this.CalculateDistanceInMilesOperationCompleted == null)) {
                this.CalculateDistanceInMilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateDistanceInMilesOperationCompleted);
            }
            this.InvokeAsync("CalculateDistanceInMiles", new object[] {
                        latitude1,
                        longitude1,
                        latitude2,
                        longitude2}, this.CalculateDistanceInMilesOperationCompleted, userState);
        }
        
        private void OnCalculateDistanceInMilesOperationCompleted(object arg) {
            if ((this.CalculateDistanceInMilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateDistanceInMilesCompleted(this, new CalculateDistanceInMilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/AlternateCities", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] AlternateCities(string zipcode, string LicenseKey) {
            object[] results = this.Invoke("AlternateCities", new object[] {
                        zipcode,
                        LicenseKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void AlternateCitiesAsync(string zipcode, string LicenseKey) {
            this.AlternateCitiesAsync(zipcode, LicenseKey, null);
        }
        
        /// <remarks/>
        public void AlternateCitiesAsync(string zipcode, string LicenseKey, object userState) {
            if ((this.AlternateCitiesOperationCompleted == null)) {
                this.AlternateCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlternateCitiesOperationCompleted);
            }
            this.InvokeAsync("AlternateCities", new object[] {
                        zipcode,
                        LicenseKey}, this.AlternateCitiesOperationCompleted, userState);
        }
        
        private void OnAlternateCitiesOperationCompleted(object arg) {
            if ((this.AlternateCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlternateCitiesCompleted(this, new AlternateCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/CityStateToZipCodeMatcher", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] CityStateToZipCodeMatcher(string City, string StateAbbrev, bool IgnoreBadCitySpelling, string LicenseKey) {
            object[] results = this.Invoke("CityStateToZipCodeMatcher", new object[] {
                        City,
                        StateAbbrev,
                        IgnoreBadCitySpelling,
                        LicenseKey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void CityStateToZipCodeMatcherAsync(string City, string StateAbbrev, bool IgnoreBadCitySpelling, string LicenseKey) {
            this.CityStateToZipCodeMatcherAsync(City, StateAbbrev, IgnoreBadCitySpelling, LicenseKey, null);
        }
        
        /// <remarks/>
        public void CityStateToZipCodeMatcherAsync(string City, string StateAbbrev, bool IgnoreBadCitySpelling, string LicenseKey, object userState) {
            if ((this.CityStateToZipCodeMatcherOperationCompleted == null)) {
                this.CityStateToZipCodeMatcherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCityStateToZipCodeMatcherOperationCompleted);
            }
            this.InvokeAsync("CityStateToZipCodeMatcher", new object[] {
                        City,
                        StateAbbrev,
                        IgnoreBadCitySpelling,
                        LicenseKey}, this.CityStateToZipCodeMatcherOperationCompleted, userState);
        }
        
        private void OnCityStateToZipCodeMatcherOperationCompleted(object arg) {
            if ((this.CityStateToZipCodeMatcherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CityStateToZipCodeMatcherCompleted(this, new CityStateToZipCodeMatcherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/GetCongressionalDistrictByZip", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCongressionalDistrictByZip(string Zipcode, string LicenseKey) {
            object[] results = this.Invoke("GetCongressionalDistrictByZip", new object[] {
                        Zipcode,
                        LicenseKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCongressionalDistrictByZipAsync(string Zipcode, string LicenseKey) {
            this.GetCongressionalDistrictByZipAsync(Zipcode, LicenseKey, null);
        }
        
        /// <remarks/>
        public void GetCongressionalDistrictByZipAsync(string Zipcode, string LicenseKey, object userState) {
            if ((this.GetCongressionalDistrictByZipOperationCompleted == null)) {
                this.GetCongressionalDistrictByZipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCongressionalDistrictByZipOperationCompleted);
            }
            this.InvokeAsync("GetCongressionalDistrictByZip", new object[] {
                        Zipcode,
                        LicenseKey}, this.GetCongressionalDistrictByZipOperationCompleted, userState);
        }
        
        private void OnGetCongressionalDistrictByZipOperationCompleted(object arg) {
            if ((this.GetCongressionalDistrictByZipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCongressionalDistrictByZipCompleted(this, new GetCongressionalDistrictByZipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/")]
    public partial class Address {
        
        private bool serviceErrorField;
        
        private bool addressErrorField;
        
        private bool addressFoundBeMoreSpecificField;
        
        private int checkDigitField;
        
        private bool neededCorrectionField;
        
        private decimal fromLongitudeField;
        
        private decimal fromLatitudeField;
        
        private decimal toLongitudeField;
        
        private decimal toLatitudeField;
        
        private decimal avgLongitudeField;
        
        private decimal avgLatitudeField;
        
        private bool hasDaylightSavingsField;
        
        private int lLCertaintyField;
        
        private int countyNumField;
        
        private string firmField;
        
        private string deliveryAddressField;
        
        private string deliveryAddress2Field;
        
        private string primaryLowField;
        
        private string primaryHighField;
        
        private string priEOField;
        
        private string secEOField;
        
        private string secondaryLowField;
        
        private string secondaryHighField;
        
        private string secondaryField;
        
        private string extraField;
        
        private string cityField;
        
        private string stateAbbrevField;
        
        private string zipCodeField;
        
        private string carrierRouteField;
        
        private string countyField;
        
        private string deliveryPointField;
        
        private string barCodeField;
        
        private string cSKeyField;
        
        private string updateKeyField;
        
        private string recordTypeCodeField;
        
        private string congressDistrictNumberField;
        
        private string fIPSField;
        
        private string financeNumberField;
        
        private string cMSAField;
        
        private string pMSAField;
        
        private string mSAField;
        
        private string maField;
        
        private string timeZoneField;
        
        private string areaCodeField;
        
        private string preferredCityNameField;
        
        private string censusBlockNumField;
        
        private string censusTractNumField;
        
        private string primaryField;
        
        private string prefixDirectionField;
        
        private string streetNameField;
        
        private string suffixField;
        
        private string postDirectionField;
        
        private string secondaryNumberField;
        
        private string stateLegislativeUpperField;
        
        private string stateLegislativeLowerField;
        
        /// <remarks/>
        public bool ServiceError {
            get {
                return this.serviceErrorField;
            }
            set {
                this.serviceErrorField = value;
            }
        }
        
        /// <remarks/>
        public bool AddressError {
            get {
                return this.addressErrorField;
            }
            set {
                this.addressErrorField = value;
            }
        }
        
        /// <remarks/>
        public bool AddressFoundBeMoreSpecific {
            get {
                return this.addressFoundBeMoreSpecificField;
            }
            set {
                this.addressFoundBeMoreSpecificField = value;
            }
        }
        
        /// <remarks/>
        public int CheckDigit {
            get {
                return this.checkDigitField;
            }
            set {
                this.checkDigitField = value;
            }
        }
        
        /// <remarks/>
        public bool NeededCorrection {
            get {
                return this.neededCorrectionField;
            }
            set {
                this.neededCorrectionField = value;
            }
        }
        
        /// <remarks/>
        public decimal FromLongitude {
            get {
                return this.fromLongitudeField;
            }
            set {
                this.fromLongitudeField = value;
            }
        }
        
        /// <remarks/>
        public decimal FromLatitude {
            get {
                return this.fromLatitudeField;
            }
            set {
                this.fromLatitudeField = value;
            }
        }
        
        /// <remarks/>
        public decimal ToLongitude {
            get {
                return this.toLongitudeField;
            }
            set {
                this.toLongitudeField = value;
            }
        }
        
        /// <remarks/>
        public decimal ToLatitude {
            get {
                return this.toLatitudeField;
            }
            set {
                this.toLatitudeField = value;
            }
        }
        
        /// <remarks/>
        public decimal AvgLongitude {
            get {
                return this.avgLongitudeField;
            }
            set {
                this.avgLongitudeField = value;
            }
        }
        
        /// <remarks/>
        public decimal AvgLatitude {
            get {
                return this.avgLatitudeField;
            }
            set {
                this.avgLatitudeField = value;
            }
        }
        
        /// <remarks/>
        public bool hasDaylightSavings {
            get {
                return this.hasDaylightSavingsField;
            }
            set {
                this.hasDaylightSavingsField = value;
            }
        }
        
        /// <remarks/>
        public int LLCertainty {
            get {
                return this.lLCertaintyField;
            }
            set {
                this.lLCertaintyField = value;
            }
        }
        
        /// <remarks/>
        public int CountyNum {
            get {
                return this.countyNumField;
            }
            set {
                this.countyNumField = value;
            }
        }
        
        /// <remarks/>
        public string Firm {
            get {
                return this.firmField;
            }
            set {
                this.firmField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryAddress {
            get {
                return this.deliveryAddressField;
            }
            set {
                this.deliveryAddressField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryAddress2 {
            get {
                return this.deliveryAddress2Field;
            }
            set {
                this.deliveryAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryLow {
            get {
                return this.primaryLowField;
            }
            set {
                this.primaryLowField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryHigh {
            get {
                return this.primaryHighField;
            }
            set {
                this.primaryHighField = value;
            }
        }
        
        /// <remarks/>
        public string PriEO {
            get {
                return this.priEOField;
            }
            set {
                this.priEOField = value;
            }
        }
        
        /// <remarks/>
        public string SecEO {
            get {
                return this.secEOField;
            }
            set {
                this.secEOField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryLow {
            get {
                return this.secondaryLowField;
            }
            set {
                this.secondaryLowField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryHigh {
            get {
                return this.secondaryHighField;
            }
            set {
                this.secondaryHighField = value;
            }
        }
        
        /// <remarks/>
        public string Secondary {
            get {
                return this.secondaryField;
            }
            set {
                this.secondaryField = value;
            }
        }
        
        /// <remarks/>
        public string Extra {
            get {
                return this.extraField;
            }
            set {
                this.extraField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateAbbrev {
            get {
                return this.stateAbbrevField;
            }
            set {
                this.stateAbbrevField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CarrierRoute {
            get {
                return this.carrierRouteField;
            }
            set {
                this.carrierRouteField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryPoint {
            get {
                return this.deliveryPointField;
            }
            set {
                this.deliveryPointField = value;
            }
        }
        
        /// <remarks/>
        public string BarCode {
            get {
                return this.barCodeField;
            }
            set {
                this.barCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CSKey {
            get {
                return this.cSKeyField;
            }
            set {
                this.cSKeyField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateKey {
            get {
                return this.updateKeyField;
            }
            set {
                this.updateKeyField = value;
            }
        }
        
        /// <remarks/>
        public string RecordTypeCode {
            get {
                return this.recordTypeCodeField;
            }
            set {
                this.recordTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CongressDistrictNumber {
            get {
                return this.congressDistrictNumberField;
            }
            set {
                this.congressDistrictNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FIPS {
            get {
                return this.fIPSField;
            }
            set {
                this.fIPSField = value;
            }
        }
        
        /// <remarks/>
        public string FinanceNumber {
            get {
                return this.financeNumberField;
            }
            set {
                this.financeNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CMSA {
            get {
                return this.cMSAField;
            }
            set {
                this.cMSAField = value;
            }
        }
        
        /// <remarks/>
        public string PMSA {
            get {
                return this.pMSAField;
            }
            set {
                this.pMSAField = value;
            }
        }
        
        /// <remarks/>
        public string MSA {
            get {
                return this.mSAField;
            }
            set {
                this.mSAField = value;
            }
        }
        
        /// <remarks/>
        public string MA {
            get {
                return this.maField;
            }
            set {
                this.maField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PreferredCityName {
            get {
                return this.preferredCityNameField;
            }
            set {
                this.preferredCityNameField = value;
            }
        }
        
        /// <remarks/>
        public string CensusBlockNum {
            get {
                return this.censusBlockNumField;
            }
            set {
                this.censusBlockNumField = value;
            }
        }
        
        /// <remarks/>
        public string CensusTractNum {
            get {
                return this.censusTractNumField;
            }
            set {
                this.censusTractNumField = value;
            }
        }
        
        /// <remarks/>
        public string Primary {
            get {
                return this.primaryField;
            }
            set {
                this.primaryField = value;
            }
        }
        
        /// <remarks/>
        public string PrefixDirection {
            get {
                return this.prefixDirectionField;
            }
            set {
                this.prefixDirectionField = value;
            }
        }
        
        /// <remarks/>
        public string StreetName {
            get {
                return this.streetNameField;
            }
            set {
                this.streetNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string PostDirection {
            get {
                return this.postDirectionField;
            }
            set {
                this.postDirectionField = value;
            }
        }
        
        /// <remarks/>
        public string SecondaryNumber {
            get {
                return this.secondaryNumberField;
            }
            set {
                this.secondaryNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StateLegislativeUpper {
            get {
                return this.stateLegislativeUpperField;
            }
            set {
                this.stateLegislativeUpperField = value;
            }
        }
        
        /// <remarks/>
        public string StateLegislativeLower {
            get {
                return this.stateLegislativeLowerField;
            }
            set {
                this.stateLegislativeLowerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void StandardizedAddressCompletedEventHandler(object sender, StandardizedAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StandardizedAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StandardizedAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AdvancedStandardizationCompletedEventHandler(object sender, AdvancedStandardizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdvancedStandardizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdvancedStandardizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReturnCityStateCompletedEventHandler(object sender, ReturnCityStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnCityStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnCityStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void BarcodeFontURLCompletedEventHandler(object sender, BarcodeFontURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BarcodeFontURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BarcodeFontURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CCServerCheckCompletedEventHandler(object sender, CCServerCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CCServerCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CCServerCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckAddressCompletedEventHandler(object sender, CheckAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckAddressW2linesCompletedEventHandler(object sender, CheckAddressW2linesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAddressW2linesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAddressW2linesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AdvancedCheckAddressCompletedEventHandler(object sender, AdvancedCheckAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdvancedCheckAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdvancedCheckAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VersionInformationCompletedEventHandler(object sender, VersionInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CalculateDistanceInMilesCompletedEventHandler(object sender, CalculateDistanceInMilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateDistanceInMilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateDistanceInMilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AlternateCitiesCompletedEventHandler(object sender, AlternateCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlternateCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlternateCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CityStateToZipCodeMatcherCompletedEventHandler(object sender, CityStateToZipCodeMatcherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CityStateToZipCodeMatcherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CityStateToZipCodeMatcherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCongressionalDistrictByZipCompletedEventHandler(object sender, GetCongressionalDistrictByZipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCongressionalDistrictByZipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCongressionalDistrictByZipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591